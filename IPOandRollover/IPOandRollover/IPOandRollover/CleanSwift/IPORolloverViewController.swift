//
//  IPORolloverViewController.swift
//  IPOandRollover
//
//  Created by BUSSNQ TH on 21/1/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol IPORolloverDisplayLogic: class {
    func displayIPORollove(ipoRolloverData: [IPORolloverData])
}

class IPORolloverViewController: UIViewController, IPORolloverDisplayLogic

{
    @IBOutlet weak var tableView: UITableView!
  var interactor: IPORolloverBusinessLogic?
  var router: (NSObjectProtocol & IPORolloverRoutingLogic & IPORolloverDataPassing)?


    var didplayIPORollover: [IPORolloverData] = []
   
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = IPORolloverInteractor()
    let presenter = IPORolloverPresenter()
    let router = IPORolloverRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
//    doSomething()
    doFetchIPORollover()
    displayIPORollove(ipoRolloverData: didplayIPORollover)
   print("Data>>>",didplayIPORollover)
  }

  
  func doFetchIPORollover() {
    let request = IPORolloverModel.FetchIPORollover.Request()
    interactor?.doFetchIPORollover(request: request)
  }
  
  func displayIPORollove(ipoRolloverData: [IPORolloverData]) {

    self.didplayIPORollover = ipoRolloverData
    self.tableView.reloadData()
  }
}
extension IPORolloverViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return didplayIPORollover.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "IPORolloverViewCell") as! IPORolloverViewCell
        let dataiPORollover = self.didplayIPORollover[indexPath.row]
        cell.displayiPORollver = dataiPORollover
        
        
        return cell
        
    }
    
    
}
