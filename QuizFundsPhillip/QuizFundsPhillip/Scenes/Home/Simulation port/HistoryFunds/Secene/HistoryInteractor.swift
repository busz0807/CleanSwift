//
//  HistoryInteractor.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 16/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryBusinessLogic {
    func doFetchFundsId(request: History.FetchFundsID.Request)
    func dofetchHistory(request: History.FetchHistoryData.Request)
}

protocol HistoryDataStore {
    var getHistory: GetHistoryModel? { get set }
    var fundsId: String? {get set}
    var portNo: Int {get set}
}

class HistoryInteractor: HistoryBusinessLogic, HistoryDataStore {
    var getHistory: GetHistoryModel?
    
  var presenter: HistoryPresentationLogic?
  var worker: HistoryWorker?
    var fundsId: String?
    var portNo: Int = 0
    
  // MARK: Do something
    
    func doFetchFundsId(request: History.FetchFundsID.Request) {
        let response = History.FetchFundsID.Response(fcode: fundsId ?? "", portNo: portNo )
        presenter?.presentFundscode(response: response)
    }
    func dofetchHistory(request: History.FetchHistoryData.Request)
    {
      worker = HistoryWorker()
      let username = request.username
      let portNo = request.portno
      let fcode = request.fcode
  //    print("username", username)
  //    print("portNo", portNo )
  //    print("fcode", fcode )
      worker?.fecthGetHistoryData (username: username, portNo: portNo, fcode: fcode) { (getHistory, error ) in
          if error != nil {
              let response =  History.FetchHistoryData.Response(getHistory: nil, error: error)
              self.presenter?.presentfetchHistory(response: response)
          }
          
          let response =  History.FetchHistoryData.Response(getHistory: getHistory, error: nil)
  //      print("getOrderData", getOrderData)
          self.presenter?.presentfetchHistory(response: response)
      }
     
      let response = History.FetchHistoryData.Response()
      presenter?.presentfetchHistory(response: response)
    }
}
