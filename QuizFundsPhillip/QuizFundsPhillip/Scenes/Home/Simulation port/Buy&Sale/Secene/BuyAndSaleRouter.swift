//
//  BuyAndSaleRouter.swift
//  QuizFundsPhillip
//
//  Created by BUSSNQ TH on 15/3/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BuyAndSaleRoutingLogic
{
    func backtoMainPagePreview()
    func backtoPagePreview()
    func sendDatagoToRiskPreview(risk: Int?)
    func sendDatagoToDeletePreview(fundsId: String?, portNo: Int)
    func sendDatagoToHistoryPreview(fundsId: String?, portNo: Int)
    func sendDatagoToAddPortPreview(mainPage: String,enName: String, thName:String, risk: Int, nav: String, chage: String, buy: String, sell: String, date: String, portNo: Int,assetCompany: String, investOpenDate: String, getOrderList: DataGetOrder?)
    func sendDatagoToSellPortPreview(mainPage: String,enName: String, thName:String, risk: Int, nav: String, chage: String, buy: String, sell: String, date: String, portNo: Int,assetCompany: String, investOpenDate: String, getOrderList: DataGetOrder?)
}
protocol BuyAndSaleDataPassing
{
  var dataStore: BuyAndSaleDataStore? { get }
}

class BuyAndSaleRouter: NSObject, BuyAndSaleRoutingLogic, BuyAndSaleDataPassing
{
  weak var viewController: BuyAndSaleViewController?
  var dataStore: BuyAndSaleDataStore?
  
  // MARK: Routing
  
    func sendDatagoToRiskPreview(risk: Int?) {
         let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "RiskViewController") as! RiskViewController
         var destinationDS = destinationVC.router!.dataStore!
        destinationDS.risk = risk
        viewController?.present(destinationVC, animated: true)
        
    }
    func sendDatagoToDeletePreview(fundsId: String?, portNo: Int) {
         let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "DeleteMenuViewController") as! DeleteMenuViewController
         var destinationDS = destinationVC.router!.dataStore!
        destinationDS.fundsId = fundsId
        destinationDS.portNo = portNo
        viewController?.present(destinationVC, animated: true)
        
    }
    func sendDatagoToAddPortPreview(mainPage: String,enName: String, thName:String, risk: Int, nav: String, chage: String, buy: String, sell: String, date: String, portNo: Int,assetCompany: String, investOpenDate: String, getOrderList: DataGetOrder?) {
      let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "AddSimulationPortViewController") as! AddSimulationPortViewController
      var destinationDS = destinationVC.router!.dataStore!
        destinationDS.mainPage = mainPage
        destinationDS.enName = enName
        destinationDS.thName = thName
        destinationDS.risk = risk
        destinationDS.nav = nav
        destinationDS.chage = chage
        destinationDS.buy = buy
        destinationDS.sell = sell
        destinationDS.datenav = date
        destinationDS.portNo = portNo
        destinationDS.assetCompany = assetCompany
        destinationDS.investOpenDate = investOpenDate
        destinationDS.getOrderList = getOrderList
      viewController?.present(destinationVC, animated: false)
    
    }
    func sendDatagoToSellPortPreview(mainPage: String,enName: String, thName:String, risk: Int, nav: String, chage: String, buy: String, sell: String, date: String, portNo: Int,assetCompany: String, investOpenDate: String, getOrderList: DataGetOrder?){
      let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "FundSaleViewController") as! FundSaleViewController
      var destinationDS = destinationVC.router!.dataStore!
        destinationDS.mainPage = mainPage
        destinationDS.enName = enName
        destinationDS.thName = thName
        destinationDS.risk = risk
        destinationDS.nav = nav
        destinationDS.chage = chage
        destinationDS.buy = buy
        destinationDS.sell = sell
        destinationDS.datenav = date
        destinationDS.portNo = portNo
        destinationDS.assetCompany = assetCompany
        destinationDS.investOpenDate = investOpenDate
        destinationDS.getOrderList = getOrderList
      viewController?.present(destinationVC, animated: false)
    }
    func sendDatagoToHistoryPreview(fundsId: String?, portNo: Int){
        let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "HistoryViewController") as! HistoryViewController
        var destinationDS = destinationVC.router!.dataStore!
       destinationDS.fundsId = fundsId
       destinationDS.portNo = portNo
       viewController?.present(destinationVC, animated: true)
    }
    func backtoMainPagePreview() {
//        let destinationtabbarVC = UITapbar.performSegue(withIdentifier: "tabBar", sender: self
       
        viewController?.view.window?.rootViewController?.dismiss(animated: false, completion: nil)
        
    }
    func backtoPagePreview() {
        viewController?.dismiss(animated: true, completion: nil)
    }
}
