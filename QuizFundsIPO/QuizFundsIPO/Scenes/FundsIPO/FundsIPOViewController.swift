//
//  FundsIPOViewController.swift
//  QuizFundsIPO
//
//  Created by BUSSNQ TH on 25/1/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FundsIPODisplayLogic: class
{
    func displayFetchFromLocalDataStore(viewModel: FundsIPO.FetchFromLocalDataStore.ViewModel)
    func displayFetchFundsData(viewModel: FundsIPO.FetchFundsDatas.ViewModel)
    
}

class FundsIPOViewController: UIViewController, FundsIPODisplayLogic {

    @IBOutlet weak var tableView: UITableView!
    var interactor: FundsIPOBusinessLogic?

  var router: (NSObjectProtocol & FundsIPORoutingLogic & FundsIPODataPassing)?
    var fundsIPOData: FundIPORolloverDataModels?
    var fundsData :[ModelFunds]?
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = FundsIPOInteractor()
    let presenter = FundsIPOPresenter()
    let router = FundsIPORouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    setupFetchFromLocalDataStore()
    setupFetchFundsData() 
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func setupFetchFromLocalDataStore() {
    let request = FundsIPO.FetchFromLocalDataStore.Request()
    interactor?.setupFetchFromLocalDataStore(request: request)
  }
    func setupFetchFundsData() {
        let requests = FundsIPO.FetchFundsDatas.Requests(nameFunds: "IPO")
        interactor?.setupFetchFundsData(request: requests)
    }
  
    func displayFetchFromLocalDataStore(viewModel: FundsIPO.FetchFromLocalDataStore.ViewModel) {
    //nameTextField.text = viewModel.name
        self.fundsIPOData = viewModel.iPOData
  }
    func displayFetchFundsData(viewModel: FundsIPO.FetchFundsDatas.ViewModel) {
        let fundsfullData = viewModel.fundsData
        self.fundsData = fundsfullData
        self.tableView.reloadData()
//        let Counter = Int(self.fundsData!.count )
//        print("fundsData>>>",  Counter )
       
        
    }
}
extension FundsIPOViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
       
        return self.fundsData?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "FundsIPOViewCell") as! FundsIPOViewCell
        cell.data = self.fundsData?[indexPath.row]
//        cell.lbfundcode.text = self.fundsIPOData?.fundcode
//        cell.lbchnfname.text = self.fundsIPOData?.chnfmname
//        cell.lbipoRollOver.text = self.fundsIPOData?.ipoRollOver
//        cell.lbOfferExpire.text = "\(self.fundsIPOData?.ipoOfferDate2 ?? "") - \(self.fundsIPOData?.ipoExpireDate2 ?? "")"
//        let imageURL = self.fundsIPOData?.lgpic ?? ""
//        let url = URL(string: imageURL)
//        cell.imgLgpic.sd_setImage(with: url,  placeholderImage: UIImage(named: "Image"))
        return cell

    }
    
    
}
